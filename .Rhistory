ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=significant_agrp))+geom_point()
ggplot2::ggplot(agrp_vs_global,aes(fc_diff,avg_log2FC_agrp,color=significant_agrp))+geom_point()
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=significant_agrp,label=agrp_vs_global))+geom_point()+ggrepel::geom_text_repel()
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=significant_agrp,label=label))+geom_point()+ggrepel::geom_text_repel()
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=significant_agrp,label=label))+geom_point()+ggrepel::geom_text_repel()
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=significant_agrp,label=label))+geom_point()+ggrepel::geom_text_repel(max.overlaps  = 100)
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=significant_agrp,label=label))+geom_point()+ggrepel::geom_text_repel(max.overlaps  = 100)
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=significant_agrp,label=label))+geom_point(size=0.3)+ggrepel::geom_text_repel(max.overlaps  = 100)
agrp_vs_global$classification = "unchanged"
agrp_vs_global$classification[agrp_vs_global$fc_diff > 0.5 & agrp_vs_global$avg_log2FC_agrp > 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "down fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp > (0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "down fasting - agrp and global"
agrp_vs_global$classification[agrp_vs_global$fc_diff < (-0.5) & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up fasting - agrp and global"
agrp_vs_global$classification = "unchanged"
agrp_vs_global$classification[agrp_vs_global$fc_diff > 0.5 & agrp_vs_global$avg_log2FC_agrp > 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp > (0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp and global"
agrp_vs_global$classification[agrp_vs_global$fc_diff < (-0.5) & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp and global"
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.3)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "lightblue","up-regulated fasting - agrp and global"="lightred","unchanged"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.3)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "lightblue","up-regulated fasting - agrp and global"="orange","unchanged"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.3)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "lightblue","up-regulated fasting - agrp and global"="orange","unchanged"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
# label top in all 4 classes:
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
abs(agrp_vs_global$fc_diff) < 0.35
# label top in all 4 classes:
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
View(agrp_vs_global)
agrp_vs_global = dplyr::full_join(conditionGenes,conditionGenes_global,by=c("gene"="gene"),suffix=c("_agrp","_global"))
agrp_vs_global$avg_log2FC_global[is.na(agrp_vs_global$avg_log2FC_global)] = 0 # set na to 0 (was below 0.1)
agrp_vs_global$fc_diff = agrp_vs_global$avg_log2FC_agrp - agrp_vs_global$avg_log2FC_global #
agrp_vs_global$significant_agrp = FALSE
agrp_vs_global$significant_agrp[agrp_vs_global$p_val_adj_agrp < 0.001] = TRUE
agrp_vs_global$label = NA
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
View(agrp_vs_global)
# label top in all 4 classes:
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
View(agrp_vs_global)
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
agrp_vs_global$classification = "unchanged"
agrp_vs_global$classification[agrp_vs_global$fc_diff > 0.5 & agrp_vs_global$avg_log2FC_agrp > 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp > (0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp and global"
agrp_vs_global$classification[agrp_vs_global$fc_diff < (-0.5) & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp and global"
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 0.75)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 0.75)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 0.75)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.5)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.5)]
View(agrp_vs_global)
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
# label top in all 4 classes:
agrp_vs_global$label =NA
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.5)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.5)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","unchanged"="grey"))
agrp_vs_global$classification = "not regulated"
agrp_vs_global$classification[agrp_vs_global$fc_diff > 0.5 & agrp_vs_global$avg_log2FC_agrp > 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp > (0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp and global"
agrp_vs_global$classification[agrp_vs_global$fc_diff < (-0.5) & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp and global"
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
agrp_vs_global$label =NA
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.5)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.5)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
agrp_vs_global$label =NA
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
agrp_vs_global$label =NA
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.25)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.25)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+theme(text = element_text(size=17))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+xlim(c(-2.5,2.5))theme(text = element_text(size=17))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+xlim(c(-2.5,2.5))theme(text = element_text(size=17))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+xlim(c(-2.5,2.5))+theme(text = element_text(size=17))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+xlim(c(-2.5,2.5))+ylim(c(-2.5,2.5))+theme(text = element_text(size=17))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+
geom_abline(slope = 1,color="grey20")+
xlim(c(-2.5,2.5))+ylim(c(-2.5,2.5))+theme(text = element_text(size=17))
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+
geom_abline(slope = 1,color="grey60")+
xlim(c(-2.5,2.5))+ylim(c(-2.5,2.5))+theme(text = element_text(size=17))
agrp_vs_global[agrp_vs_global$classification == "down-regulated fasting - agrp specific",]
agrp_vs_global$fc_ratio = log2(agrp_vs_global$avg_log2FC_agrp / agrp_vs_global$avg_log2FC_global) #
agrp_vs_global = dplyr::full_join(conditionGenes,conditionGenes_global,by=c("gene"="gene"),suffix=c("_agrp","_global"))
agrp_vs_global$avg_log2FC_global[is.na(agrp_vs_global$avg_log2FC_global)] = 0 # set na to 0 (was below 0.1)
agrp_vs_global$fc_diff = agrp_vs_global$avg_log2FC_agrp - agrp_vs_global$avg_log2FC_global #
agrp_vs_global$fc_ratio = log2(agrp_vs_global$avg_log2FC_agrp / agrp_vs_global$avg_log2FC_global) #
agrp_vs_global$significant_agrp = FALSE
agrp_vs_global$significant_agrp[agrp_vs_global$p_val_adj_agrp < 0.001] = TRUE
agrp_vs_global$label = NA
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
View(agrp_vs_global)
agrp_vs_global$fc_ratio = log2(agrp_vs_global$avg_log2FC_agrp+1 / agrp_vs_global$avg_log2FC_global+1)
agrp_vs_global$classification = "not regulated"
agrp_vs_global$classification[agrp_vs_global$fc_diff > 0.5 & agrp_vs_global$avg_log2FC_agrp > 0.5 & abs(agrp_vs_global$avg_log2FC_agrp) < 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp > (0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp and global"
agrp_vs_global$classification[agrp_vs_global$fc_diff < (-0.5) & agrp_vs_global$avg_log2FC_agrp < (-0.5) & abs(agrp_vs_global$avg_log2FC_agrp) < 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp and global"
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
agrp_vs_global$label =NA
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.25)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.25)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+
geom_abline(slope = 1,color="grey60")+
xlim(c(-2.5,2.5))+ylim(c(-2.5,2.5))+theme(text = element_text(size=17))
agrp_vs_global$classification = "not regulated"
agrp_vs_global$classification[agrp_vs_global$fc_diff > 0.5 & agrp_vs_global$avg_log2FC_agrp > 0.5 & abs(agrp_vs_global$avg_log2FC_global) < 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp > (0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "down-regulated fasting - agrp and global"
agrp_vs_global$classification[agrp_vs_global$fc_diff < (-0.5) & agrp_vs_global$avg_log2FC_agrp < (-0.5) & abs(agrp_vs_global$avg_log2FC_global) < 0.5 & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp specific"
agrp_vs_global$classification[abs(agrp_vs_global$fc_diff) < 0.3 & agrp_vs_global$avg_log2FC_agrp < (-0.5) & agrp_vs_global$p_val_adj_agrp < 0.001] = "up-regulated fasting - agrp and global"
agrp_vs_global$p_val_adj_global[is.na(agrp_vs_global$p_val_adj_global)] = 1 # set na to 0 (was below 0.1)
# label top in all 4 classes:
agrp_vs_global$label =NA
# agrp specific
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) > 0.75 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001)]
# global
agrp_vs_global$label[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.25)] = agrp_vs_global$gene[abs(agrp_vs_global$fc_diff) < 0.35 & (agrp_vs_global$p_val_adj_agrp < 0.001 | agrp_vs_global$p_val_adj_global < 0.001) & (abs(agrp_vs_global$avg_log2FC_agrp) > 1.25)]
ggplot2::ggplot(agrp_vs_global,aes(avg_log2FC_global,avg_log2FC_agrp,color=classification,label=label))+geom_point(size=0.5)+ggrepel::geom_text_repel(max.overlaps  = 100)+scale_color_manual(values = c("up-regulated fasting - agrp specific"="red","down-regulated fasting - agrp specific"="blue","down-regulated fasting - agrp and global" = "#51c3fc","up-regulated fasting - agrp and global"="#fc7a62","not regulated"="grey"))+
geom_abline(slope = 1,color="grey60")+
xlim(c(-2.5,2.5))+ylim(c(-2.5,2.5))+theme(text = element_text(size=17))
agrp_vs_global[agrp_vs_global$classification == "down-regulated fasting - agrp specific",]
write.table(agrp_vs_global[agrp_vs_global$classification == "down-regulated fasting - agrp specific",gene],quote = F,row.names = F)
write.table(agrp_vs_global[agrp_vs_global$classification == "down-regulated fasting - agrp specific","gene"],quote = F,row.names = F)
# write.table(agrp_vs_global[agrp_vs_global$classification == "down-regulated fasting - agrp specific","gene"],quote = F,row.names = F)
agrp_vs_global[agrp_vs_global$classification == "down-regulated fasting - agrp specific",]
# write.table(agrp_vs_global[agrp_vs_global$classification == "down-regulated fasting - agrp specific","gene"],quote = F,row.names = F)
agrp_vs_global[agrp_vs_global$classification == "up-regulated fasting - agrp specific",]
cid = unique(neuron_map_seurat@meta.data$K169_pruned[neuron_map_seurat@meta.data$K169_named == "Slc17a6.Lhx9.Chrm3.Hk2"])
?FindMarkers
cid = unique(neuron_map_seurat@meta.data$K169_pruned[neuron_map_seurat@meta.data$K169_named == "Slc17a6.Lhx9.Chrm3.Hk2"])
Idents(query_snseq_neurons) <- "predicted_K169_pruned"
conditionGenes_Hk2 = Seurat::FindMarkers(query_snseq_neurons, ident.1 = "adlib",ident.2 = "fast" , group.by = "Diet",min.pct = 0,logfc.threshold = 0.1,max.cells.per.ident = 5000,subset.ident = cid)
conditionGenes_Hk2$gene = rownames(conditionGenes_Hk2)
View(conditionGenes_Hk2)
cellsh = query_snseq_neurons@meta.data$Cell_ID[query_snseq_neurons@meta.data$predicted_K169_named == "Slc17a6.Lhx9.Chrm3.Hk2"]
DimPlot(query_snseq_neurons,cells.highlight = cellsh,sizes.highlight = 0.1)+NoLegend()
# get all DEG of a sngle cluster of interest
cid = unique(neuron_map_seurat@meta.data$K169_pruned[neuron_map_seurat@meta.data$K169_named == "Slc32a1.Hmx2.Lef1.Sox14"])
Idents(query_snseq_neurons) <- "predicted_K169_pruned"
conditionGenes_lef1 = Seurat::FindMarkers(query_snseq_neurons, ident.1 = "adlib",ident.2 = "fast" , group.by = "Diet", subset.ident = cid,min.pct = 0,logfc.threshold = 0.1)
conditionGenes_lef1$gene = rownames(conditionGenes_lef1) # add gene name
conditionGenes_lef1$pct_diff = conditionGenes_lef1$pct.1 - conditionGenes_lef1$pct.2
conditionGenes_lef1_filtered = conditionGenes_lef1[conditionGenes_lef1$p_val_adj < 0.05,] # filter pval
conditionGenes_lef1_filtered %>% dplyr::arrange((pct_diff),(avg_log2FC))
conditionGenes_Hk2_filtered %>% dplyr::arrange((pct_diff),(avg_log2FC))
cid = unique(neuron_map_seurat@meta.data$K169_pruned[neuron_map_seurat@meta.data$K169_named == "Slc17a6.Lhx9.Chrm3.Hk2"])
Idents(query_snseq_neurons) <- "predicted_K169_pruned"
conditionGenes_Hk2 = Seurat::FindMarkers(query_snseq_neurons, ident.1 = "adlib",ident.2 = "fast" , group.by = "Diet",min.pct = 0,logfc.threshold = 0.1,max.cells.per.ident = 5000,subset.ident = cid)
conditionGenes_Hk2$gene = rownames(conditionGenes_Hk2)
conditionGenes_Hk2$pct_diff = conditionGenes_Hk2$pct.1 - conditionGenes_Hk2$pct.2
conditionGenes_Hk2_filtered = conditionGenes_Hk2_filtered[conditionGenes_Hk2_filtered$p_val_adj < 0.05,] # filter pval
conditionGenes_Hk2_filtered = conditionGenes_Hk2[conditionGenes_Hk2$p_val_adj < 0.05,] # filter pval
conditionGenes_Hk2_filtered %>% dplyr::arrange((pct_diff),(avg_log2FC))
FeaturePlot(query_snseq_neurons,features = "Sv2c",split.by = "Diet")
FeaturePlot(query_snseq_neurons,features = "Sv2c",split.by = "Diet")
FeaturePlot(query_snseq_neurons,features = "Sv2c",split.by = "Diet")
View(conditionGenes_lef1_filtered)
View(conditionGenes_lef1_filtered)
View(conditionGenes_lef1)
# get all DEG of a sngle cluster of interest
cid = unique(neuron_map_seurat@meta.data$K169_pruned[neuron_map_seurat@meta.data$K169_named == "Slc32a1.Hmx2.Ppp1r17.Cck"])
Idents(query_snseq_neurons) <- "predicted_K169_pruned"
conditionGenes_cck = Seurat::FindMarkers(query_snseq_neurons, ident.1 = "adlib",ident.2 = "fast" , group.by = "Diet", subset.ident = cid,min.pct = 0,logfc.threshold = 0.1)
conditionGenes_cck$gene = rownames(conditionGenes_cck) # add gene name
conditionGenes_cck$pct_diff = conditionGenes_cck$pct.1 - conditionGenes_cck$pct.2
conditionGenes_cck_filtered = conditionGenes_cck[conditionGenes_cck$p_val_adj < 0.05,] # filter pval
conditionGenes_cck_filtered %>% dplyr::arrange((pct_diff),(avg_log2FC))
View(conditionGenes_cck_filtered)
FeaturePlot(query_snseq_neurons,features = "Fat3",split.by = "Diet")
?log
#' @param pseudocount.use Pseudocount to add to averaged expression values when
#' calculating logFC. 1 by default.
#'
#' @importFrom Matrix rowSums
#' @importFrom stats p.adjust
#'
#' @rdname FindMarkers2
#' @export
#' @method FindMarkers2 default
#'
FindMarkers2.default <- function(
object,
slot = "data",
counts = numeric(),
cells.1 = NULL,
cells.2 = NULL,
features = NULL,
reduction = NULL,
logfc.threshold = 0.25,
test.use = 'wilcox',
min.pct = 0.1,
min.diff.pct = -Inf,
verbose = TRUE,
only.pos = FALSE,
max.cells.per.ident = Inf,
random.seed = 1,
latent.vars = NULL,
min.cells.feature = 3,
min.cells.group = 3,
pseudocount.use = 1,
base = 2,
...
) {
features <- features %||% rownames(x = object)
methods.noprefiliter <- c("DESeq2")
if (test.use %in% methods.noprefiliter) {
features <- rownames(x = object)
min.diff.pct <- -Inf
logfc.threshold <- 0
}
# error checking
if (length(x = cells.1) == 0) {
stop("Cell group 1 is empty - no cells with identity class ", cells.1)
} else if (length(x = cells.2) == 0) {
stop("Cell group 2 is empty - no cells with identity class ", cells.2)
return(NULL)
} else if (length(x = cells.1) < min.cells.group) {
stop("Cell group 1 has fewer than ", min.cells.group, " cells")
} else if (length(x = cells.2) < min.cells.group) {
stop("Cell group 2 has fewer than ", min.cells.group, " cells")
} else if (any(!cells.1 %in% colnames(x = object))) {
bad.cells <- colnames(x = object)[which(x = !as.character(x = cells.1) %in% colnames(x = object))]
stop(
"The following cell names provided to cells.1 are not present: ",
paste(bad.cells, collapse = ", ")
)
} else if (any(!cells.2 %in% colnames(x = object))) {
bad.cells <- colnames(x = object)[which(x = !as.character(x = cells.2) %in% colnames(x = object))]
stop(
"The following cell names provided to cells.2 are not present: ",
paste(bad.cells, collapse = ", ")
)
}
# feature selection (based on percentages)
data <- switch(
EXPR = slot,
'scale.data' = counts,
object
)
if (is.null(x = reduction)) {
thresh.min <- 0
pct.1 <- round(
x = rowSums(x = data[features, cells.1, drop = FALSE] > thresh.min) /
length(x = cells.1),
digits = 3
)
pct.2 <- round(
x = rowSums(x = data[features, cells.2, drop = FALSE] > thresh.min) /
length(x = cells.2),
digits = 3
)
data.alpha <- cbind(pct.1, pct.2)
colnames(x = data.alpha) <- c("pct.1", "pct.2")
alpha.min <- apply(X = data.alpha, MARGIN = 1, FUN = max)
names(x = alpha.min) <- rownames(x = data.alpha)
features <- names(x = which(x = alpha.min > min.pct))
if (length(x = features) == 0) {
stop("No features pass min.pct threshold")
}
alpha.diff <- alpha.min - apply(X = data.alpha, MARGIN = 1, FUN = min)
features <- names(
x = which(x = alpha.min > min.pct & alpha.diff > min.diff.pct)
)
if (length(x = features) == 0) {
stop("No features pass min.diff.pct threshold")
}
} else {
data.alpha <- data.frame(
pct.1 = rep(x = NA, times = length(x = features)),
pct.2 = rep(x = NA, times = length(x = features))
)
}
# feature selection (based on average difference)
mean.fxn <- if (is.null(x = reduction) && slot != "scale.data") {
switch(
EXPR = slot,
'data' = function(x) {
return(log(x = mean(x = expm1(x = x)) + pseudocount.use),base = base)
},
function(x) {
return(log(x = mean(x = x) + pseudocount.use),base = base)
}
)
} else {
mean
}
data.1 <- apply(
X = data[features, cells.1, drop = FALSE],
MARGIN = 1,
FUN = mean.fxn
)
data.2 <- apply(
X = data[features, cells.2, drop = FALSE],
MARGIN = 1,
FUN = mean.fxn
)
total.diff <- (data.1 - data.2)
if (is.null(x = reduction) && slot != "scale.data") {
features.diff <- if (only.pos) {
names(x = which(x = total.diff > logfc.threshold))
} else {
names(x = which(x = abs(x = total.diff) > logfc.threshold))
}
features <- intersect(x = features, y = features.diff)
if (length(x = features) == 0) {
stop("No features pass logfc.threshold threshold")
}
}
if (max.cells.per.ident < Inf) {
set.seed(seed = random.seed)
# Should be cells.1 and cells.2?
if (length(x = cells.1) > max.cells.per.ident) {
cells.1 <- sample(x = cells.1, size = max.cells.per.ident)
}
if (length(x = cells.2) > max.cells.per.ident) {
cells.2 <- sample(x = cells.2, size = max.cells.per.ident)
}
if (!is.null(x = latent.vars)) {
latent.vars <- latent.vars[c(cells.1, cells.2), , drop = FALSE]
}
}
# perform DE
if (!(test.use %in% c('negbinom', 'poisson', 'MAST', "LR", 'VE')) && !is.null(x = latent.vars)) {
warning(
"'latent.vars' is only used for 'negbinom', 'poisson', 'LR', 'VE', and 'MAST' tests",
call. = FALSE,
immediate. = TRUE
)
}
if (!test.use %in% c('wilcox', 'VE', 'MAST', 'DESeq2')) {
CheckDots(...)
}
de.results <- switch(
EXPR = test.use,
'wilcox' = WilcoxDETest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
verbose = verbose,
...
),
'bimod' = DiffExpTest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
verbose = verbose
),
'roc' = MarkerTest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
verbose = verbose
),
't' = DiffTTest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
verbose = verbose
),
'negbinom' = GLMDETest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
min.cells = min.cells.feature,
latent.vars = latent.vars,
test.use = test.use,
verbose = verbose
),
'poisson' = GLMDETest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
min.cells = min.cells.feature,
latent.vars = latent.vars,
test.use = test.use,
verbose = verbose
),
'MAST' = MASTDETest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
latent.vars = latent.vars,
verbose = verbose,
...
),
"DESeq2" = DESeq2DETest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
verbose = verbose,
...
),
"LR" = LRDETest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
latent.vars = latent.vars,
verbose = verbose
),
"VE" = VEDETest(
data.use = object[features, c(cells.1, cells.2), drop = FALSE],
cells.1 = cells.1,
cells.2 = cells.2,
latent.vars = latent.vars,
verbose = verbose,
...
),
stop("Unknown test: ", test.use)
)
if (is.null(x = reduction)) {
diff.col <- ifelse(
test = slot == "scale.data" || test.use == 'roc',
yes = "avg_diff",
no = "avg_logFC"
)
de.results[, diff.col] <- total.diff[rownames(x = de.results)]
de.results <- cbind(de.results, data.alpha[rownames(x = de.results), , drop = FALSE])
} else {
diff.col <- "avg_diff"
de.results[, diff.col] <- total.diff[rownames(x = de.results)]
}
if (only.pos) {
de.results <- de.results[de.results[, diff.col] > 0, , drop = FALSE]
}
if (test.use == "roc") {
de.results <- de.results[order(-de.results$power, -de.results[, diff.col]), ]
} else {
de.results <- de.results[order(de.results$p_val, -de.results[, diff.col]), ]
de.results$p_val_adj = p.adjust(
p = de.results$p_val,
method = "bonferroni",
n = nrow(x = object)
)
}
return(de.results)
}
source('/beegfs/scratch/bruening_scratch/lsteuernagel/projects/scHarmonize/harmonization/stratified_wilcoxon_functions.R')
markers_strat = FindMarkers2.Seurat(object = query_snseq_all,ident.1 = "K98-4",ident.2 = "K98-1",logfc.threshold = 0.2,min.pct = 0.1,max.cells.per.ident = 3000)
Idents(query_snseq_neurons) <- "predicted_K98_pruned"
markers_strat = FindMarkers2.Seurat(object = query_snseq_all,ident.1 = "K98-4",ident.2 = "K98-1",logfc.threshold = 0.2,min.pct = 0.1,max.cells.per.ident = 3000)
Idents(query_snseq_neurons) <- "predicted_K98_pruned"
markers_strat = FindMarkers2.Seurat(object = query_snseq_neurons,ident.1 = "K98-4",ident.2 = "K98-1",logfc.threshold = 0.2,min.pct = 0.1,max.cells.per.ident = 3000)
source('/beegfs/scratch/bruening_scratch/lsteuernagel/projects/scHarmonize/harmonization/stratified_wilcoxon_functions.R')
markers_strat = FindMarkers2.Seurat(object = query_snseq_neurons,ident.1 = "K98-4",ident.2 = "K98-1",logfc.threshold = 0.2,min.pct = 0.1,max.cells.per.ident = 3000)
source('/beegfs/scratch/bruening_scratch/lsteuernagel/projects/scHarmonize/harmonization/stratified_wilcoxon_functions.R')
markers_strat = FindMarkers2.Seurat(object = query_snseq_neurons,ident.1 = "K98-4",ident.2 = "K98-1",logfc.threshold = 0.2,min.pct = 0.1,max.cells.per.ident = 3000)
View(markers_strat)
markers_seurat = FindMarkers(object = query_snseq_neurons,ident.1 = "K98-4",ident.2 = "K98-1",logfc.threshold = 0.2,min.pct = 0.1,max.cells.per.ident = 3000)
View(markers_seurat)
markers_strat = FindMarkers2.Seurat(object = query_snseq_neurons,ident.1 = "K98-4",ident.2 = "K98-1",logfc.threshold = 0.2,min.pct = 0.1,max.cells.per.ident = 3000,base=exp(1))
source('/beegfs/scratch/bruening_scratch/lsteuernagel/projects/scHarmonize/harmonization/stratified_wilcoxon_functions.R')
View(markers_strat)
