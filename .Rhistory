n.neighbors = k_param_umap,
nn.method = "annoy",
n.trees = 50,
annoy.metric = annoy.metric,
l2.norm = FALSE,
seed_use = global_seed,
neighbor.name = "query_ref_nn",
reduction.model = reference_map_umap,
return.neighbor = TRUE
)
project_query_TEST = function(query_seurat_object,reference_map_reduc,reference_map_umap,query_reduction="scvi",assay="RNA",k_param_umap = 30,
annoy.metric = "cosine",label_vec =NULL,global_seed=12345){
# TODO: test for umap model (?)
#test for query_reduction name
if(! query_reduction %in% names(query_seurat_object@reductions)){
message("Error: query_reduction name cannot be found in query_seurat_object")
stop()
}
#test for same space size
if(ncol(query_seurat_object@reductions[[query_reduction]]@cell.embeddings) != ncol(reference_map_reduc@cell.embeddings)){
message("Warning: query reduction and reference reduction don't have the same number of dimensions!")
# stop()
}
### project query onto umap
message(Sys.time(),": Project UMAP.." )
query_projection = Seurat::ProjectUMAP(
query = query_seurat_object@reductions[[query_reduction]],
query.dims = 1:ncol(query_seurat_object@reductions[[query_reduction]]@cell.embeddings),
reference = reference_map_reduc,
reference.dims = 1:ncol(reference_map_reduc@cell.embeddings),
k.param = k_param_umap,
n.neighbors = k_param_umap,
nn.method = "annoy",
n.trees = 50,
annoy.metric = annoy.metric,
l2.norm = FALSE,
seed_use = global_seed,
neighbor.name = "query_ref_nn",
reduction.model = reference_map_umap,
return.neighbor = TRUE
)
return(query_projection)
}
load_all()
lamanno_seurat_object = project_query_TEST(query_seurat_object = lamanno_seurat_object,
reference_map_reduc = reference_hypoMap@reductions[[reference_reduction]],
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]],
query_reduction = "scvi",
k_param_umap = 20,
label_vec =cluster_labels)
load_all()
rm(project_query_TEST)
load_all()
query_projected = project_query_TEST(query_seurat_object = lamanno_seurat_object,
reference_map_reduc = reference_hypoMap@reductions[[reference_reduction]],
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]],
query_reduction = "scvi",
k_param_umap = 20,
label_vec =cluster_labels)
rm(query_seurat_object)
query_projected = project_query_TEST(query_seurat_object = lamanno_seurat_object,
reference_map_reduc = reference_hypoMap@reductions[[reference_reduction]],
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]],
query_reduction = "scvi",
k_param_umap = 20,
label_vec =cluster_labels)
uwot::umap_transform
lamanno_seurat_object@neighbors
library(mapscvi)
a2=reference_hypoMap@reductions[[reference_reduction]]
check_graph
View(a1)
# ## load romanov query
suffix ="mapped_data_yeo_romanov" # a name
query_romanov_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/mapped_data_Romanov_neurons/mapped_data_Romanov_neurons.h5Seurat" # seurat object to load
query_romanov = SeuratDisk::LoadH5Seurat(query_romanov_path)
query_romanov@reductions = list()
query_romanov@meta.data = query_romanov@meta.data[,1:20]
#save testdata
save(query_romanov,
file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/query_romanov_object.RData")
library(mapscvi)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/query_romanov_object.RData")
query_romanov
names(query_seurat_object@reductions)
names(query_romanov@reductions)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/reference_hypoMap.RData")
query_romanov = map_new_seurat_hypoMap(query_romanov,suffix="query_romanov",label_col="K169_named",max_epochs=20,reference_seurat=reference_hypoMap)
names(query_romanov@reductions)
query_romanov = map_new_seurat_hypoMap(query_romanov,suffix="query_romanov",label_col="K169_named",max_epochs=20,reference_seurat=reference_hypoMap)
names(query_romanov@reductions)
head(sort(table(query_romanov@meta.data$predicted),decreasing = TRUE),n = 10)
plot_query_labels(query_seura_object=query_romanov,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
plot_query_labels(query_seura_object=query_romanov,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = TRUE,overlay_pt_size = 0.4,labelonplot = TRUE,label.size=1)
rm(query_projection)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/sce_lamanno_da.RData")
sce_lamanno_da
lamanno_seurat_object = prepare_query_hypoMap(sce_lamanno_da,suffix="lamanno_da",normalize=TRUE)
lamanno_seurat_object = prepare_query_hypoMap(sce_lamanno_da,suffix="lamanno_da",normalize=TRUE)
lamanno_seurat_object
model_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/hypothalamus_neurons_reference_model/"
max_epochs = 20
lamanno_seurat_object = predict_query(lamanno_seurat_object,model_path,max_epochs = max_epochs)
names(lamanno_seurat_object@reductions)
model_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/hypothalamus_neurons_reference_model/"
max_epochs = 20
lamanno_seurat_object = predict_query(lamanno_seurat_object,model_path,max_epochs = max_epochs)
names(lamanno_seurat_object@reductions)
names(lamanno_seurat_object@reductions)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/reference_hypoMap.RData")
query_projected = project_query_TEST(query_seurat_object = lamanno_seurat_object,
reference_map_reduc = reference_hypoMap@reductions[[reference_reduction]],
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]],
query_reduction = "scvi",
k_param_umap = 20,
label_vec =cluster_labels)
ncol(lamanno_seurat_object@reductions[["scvi"]]@cell.embeddings)
query_projection = Seurat::ProjectUMAP(
query =lamanno_seurat_object@reductions[["scvi"]],
query.dims = 1:ncol(lamanno_seurat_object@reductions[["scvi"]]@cell.embeddings),
reference = reference_map_reduc,
reference.dims = 1:ncol(reference_map_reduc@cell.embeddings),
k.param = 20,
n.neighbors = 20,
nn.method = "annoy",
n.trees = 50,
annoy.metric = "cosine",
l2.norm = FALSE,
seed_use = 12345,
neighbor.name = "query_ref_nn",
reduction.model = reference_map_umap,
return.neighbor = TRUE
)
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]]
reference_map_umap@misc$model$search_k
reference_map_umap@misc$model$n_neighbors
query_projection = Seurat::ProjectUMAP(
query =lamanno_seurat_object@reductions[["scvi"]],
query.dims = 1:ncol(lamanno_seurat_object@reductions[["scvi"]]@cell.embeddings),
reference = reference_map_reduc,
reference.dims = 1:ncol(reference_map_reduc@cell.embeddings),
k.param = reference_map_umap@misc$model$n_neighbors,
n.neighbors = 20,
nn.method = "annoy",
n.trees = 50,
annoy.metric = "cosine",
l2.norm = FALSE,
seed_use = 12345,
neighbor.name = "query_ref_nn",
reduction.model = reference_map_umap,
return.neighbor = TRUE
)
load_all()
document()
query_projected = project_query_TEST(query_seurat_object = lamanno_seurat_object,
reference_map_reduc = reference_hypoMap@reductions[[reference_reduction]],
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]],
query_reduction = "scvi",
label_vec =cluster_labels)
cluster_labels = reference_hypoMap@meta.data$K169_named
reference_reduction = "scvi"
lamanno_seurat_object = project_query(query_seurat_object = lamanno_seurat_object,
reference_map_reduc = reference_hypoMap@reductions[[reference_reduction]],
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]],
query_reduction = "scvi",
label_vec =cluster_labels)
names(lamanno_seurat_object@reductions)
cluster_labels = reference_hypoMap@meta.data$K169_named
reference_reduction = "scvi"
lamanno_seurat_object = project_query(query_seurat_object = lamanno_seurat_object,
reference_map_reduc = reference_hypoMap@reductions[[reference_reduction]],
reference_map_umap = reference_hypoMap@reductions[[paste0("umap_",reference_reduction)]],
query_reduction = "scvi",
label_vec =cluster_labels)
```{r}
```{r}
plot_query_labels(query_seura_object=lamanno_seurat_object,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
plot_query_labels(query_seura_object=lamanno_seurat_object,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = TRUE,overlay_pt_size = 0.4,labelonplot = TRUE,label.size=1)
head(sort(table(lamanno_seurat_object@meta.data$predicted),decreasing = TRUE),n = 10)
FeaturePlot(lamanno_seurat_object,features = "Th")
FeaturePlot(lamanno_seurat_object,features = "Th")
FeaturePlot(neuron_map_seurat,features = "Th")
FeaturePlot(lamanno_seurat_object,features = "Agrp")
FeaturePlot(lamanno_seurat_object,features = "Sst")
FeaturePlot(lamanno_seurat_object,features = "Prph")
FeaturePlot(lamanno_seurat_object,features = "Slc6a3")
FeaturePlot(lamanno_seurat_object,features = "Fam159b")
load_all()
document()
check()
build_readme()
load_all()
build_readme()
# browser()
# side-by-side
p1 = Seurat::DimPlot(reference_seurat,group.by = label_col,reduction = reference_umap,label = labelonplot,...)
p1$coordinates
p1$layers
p1$layers[[1]]
p1$scales
bla$coordinates$limits
p1$coordinates$limits
p1
p1$coordinates$limits
p1$coordinates
?xlim
load_all()
plot_query_labels(query_seura_object=query_romanov,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
plot_query_labels(query_seura_object=query_romanov,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
plot_query_labels(query_seura_object=lamanno_seurat_object,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
load_all()
plot_query_labels(query_seura_object=lamanno_seurat_object,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
load_all()
document()
build_readme()
build_readme()
build_readme()
anno_df$cluster_id[anno_df$Map_CellType=="Slc17a6.Lhx9.Igf1.Parpbp"]
pmch_markers_yeo
pmch_markers_yeo = FindMarkers(mapped_data_yeo_neurons,ident.1 = "Slc17a6.Lhx9.Igf1.Parpbp",max.cells.per.ident = 5000)
colnames(mapped_data_yeo_neurons@meta.data)
Idents(mapped_data_yeo_neurons) <- "predicted_K169_named"
pmch_markers_yeo = FindMarkers(mapped_data_yeo_neurons,ident.1 = "Slc17a6.Lhx9.Igf1.Parpbp",max.cells.per.ident = 5000)
pmch_markers_map = neuron_map_seurat@misc$markers_comparisons_all[neuron_map_seurat@misc$markers_comparisons_all$p_val_adj<0.01 &
neuron_map_seurat@misc$markers_comparisons_all$cluster_1=="K169-139"]
pmch_markers_map = neuron_map_seurat@misc$markers_comparisons_all[neuron_map_seurat@misc$markers_comparisons_all$p_val_adj<0.01 &
neuron_map_seurat@misc$markers_comparisons_all$cluster_1=="K169-139",]
colnames(pmch_markers_yeo)
pmch_markers_yeo$gene = rownames(pmch_markers_yeo)
?FindMarkers
exp
pmch_markers_yeo = FindMarkers(mapped_data_yeo_neurons,ident.1 = "Slc17a6.Lhx9.Igf1.Parpbp",max.cells.per.ident = 5000,base = exp)
exp(1)
exp(2)
?FindAllMarkers
FindMarkers
pmch_markers_yeo = FindMarkers(mapped_data_yeo_neurons,ident.1 = "Slc17a6.Lhx9.Igf1.Parpbp",max.cells.per.ident = 5000,base = exp(1))
View(pmch_markers_yeo)
pmch_markers_map = neuron_map_seurat@misc$markers_comparisons_all[neuron_map_seurat@misc$markers_comparisons_all$p_val_adj<0.01 &
neuron_map_seurat@misc$markers_comparisons_all$cluster_1=="K169-139",]
colnames(pmch_markers_yeo)
colnames(pmch_markers_map)
dplyr::left_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj)
both = pmch_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>%
dplyr::left_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene")
pmch_markers_yeo$gene = rownames(pmch_markers_yeo)
both = pmch_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>%
dplyr::left_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene")
View(both)
both = pmch_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>%
dplyr::full_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene")
View(both)
both = pmch_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>% dplyr::filter(p_val_adj<0.01) %>%
dplyr::full_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene")
both = pmch_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>% dplyr::filter(padj_yeo<0.01) %>%
dplyr::full_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene")
View(both)
pmch_markers_yeo = FindMarkers(mapped_data_yeo_neurons,ident.1 = "Slc17a6.Lhx9.Igf1.Parpbp",max.cells.per.ident = 5000,base = exp(1),only.pos = TRUE)
pmch_markers_yeo$gene = rownames(pmch_markers_yeo)
anno_df$cluster_id[anno_df$Map_CellType=="Slc17a6.Lhx9.Igf1.Parpbp"]
pmch_markers_map = neuron_map_seurat@misc$markers_comparisons_all[neuron_map_seurat@misc$markers_comparisons_all$p_val_adj<0.01 &
neuron_map_seurat@misc$markers_comparisons_all$cluster_1=="K169-139",]
both = pmch_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>% dplyr::filter(padj_yeo<0.01) %>%
dplyr::full_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene")
ggplot(both, aes(x=avg_logFC_hypoMap,y=avg_logFC_yeo))+geom_point()
?case_when
both = pmch_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>% dplyr::filter(padj_yeo<0.01) %>%
dplyr::full_join(pmch_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene") %>%
dplyr::mutate(significant = case_when( !is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "both"),
is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "nucSeq",
!is.na(avg_logFC_hypoMap) & is.na(avg_logFC_yeo) ~ "hypoMap"
)
# dplyr::mutate(significant = case_when( !is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "both"),
#               is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "nucSeq",
#               !is.na(avg_logFC_hypoMap) & is.na(avg_logFC_yeo) ~ "hypoMap"
# )
both$significant = "both"
both$significant[is.na(both$avg_logFC_yeo)] = "hypoMap"
both$significant[is.na(both$avg_logFC_hypoMap)] = "nucSeq"
both$avg_logFC_yeo[is.na(both$avg_logFC_yeo)] = 0
both$avg_logFC_hypoMap[is.na(both$avg_logFC_hypoMap)] = 0
ggplot(both, aes(x=avg_logFC_hypoMap,y=avg_logFC_yeo,color=significant))+geom_point(na)
ggplot(both, aes(x=avg_logFC_hypoMap,y=avg_logFC_yeo,color=significant))+geom_point()
View(anno_df)
Idents(mapped_data_yeo_neurons) <- "predicted_K169_named"
Idents(mapped_data_yeo_neurons) <- "predicted_K169_named"
agrp_markers_yeo = FindMarkers(mapped_data_yeo_neurons,ident.1 = "Slc32a1.Otp.Npy.Agrp.Gm8773",max.cells.per.ident = 5000,base = exp(1),only.pos = TRUE)
agrp_markers_yeo$gene = rownames(agrp_markers_yeo)
anno_df$cluster_id[anno_df$Map_CellType=="Slc32a1.Otp.Npy.Agrp.Gm8773"]
agrp_markers_yeo$gene = rownames(agrp_markers_yeo)
anno_df$cluster_id[anno_df$Map_CellType=="Slc32a1.Otp.Npy.Agrp.Gm8773"]
agrp_markers_map = neuron_map_seurat@misc$markers_comparisons_all[neuron_map_seurat@misc$markers_comparisons_all$p_val_adj<0.01 &
neuron_map_seurat@misc$markers_comparisons_all$cluster_1=="K169-1",]
both = agrp_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>% dplyr::filter(padj_yeo<0.01) %>%
dplyr::full_join(agrp_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj),by="gene")# %>%
# dplyr::mutate(significant = case_when( !is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "both"),
#               is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "nucSeq",
#               !is.na(avg_logFC_hypoMap) & is.na(avg_logFC_yeo) ~ "hypoMap"
# )
both$significant = "both"
both$significant[is.na(both$avg_logFC_yeo)] = "hypoMap"
both$significant[is.na(both$avg_logFC_hypoMap)] = "nucSeq"
both$avg_logFC_yeo[is.na(both$avg_logFC_yeo)] = 0
both$avg_logFC_hypoMap[is.na(both$avg_logFC_hypoMap)] = 0
ggplot(both, aes(x=avg_logFC_hypoMap,y=avg_logFC_yeo,color=significant))+geom_point()
p1=FeaturePlot(mapped_data_yeo_neurons,features = "Agrp")+NoAxes()
p1=FeaturePlot(mapped_data_yeo_neurons,features = "Agrp")+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = "Agrp")+NoAxes()
cowplot::plot_grid(p1,p2)
p1=FeaturePlot(mapped_data_yeo_neurons,features = "Agrp",order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = "Agrp",order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Resp18"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Tmem176b"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Jun"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Gpx3"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
both = agrp_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>% dplyr::filter(padj_yeo<0.01) %>%
dplyr::full_join(agrp_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj,specificity),by="gene")# %>%
# dplyr::mutate(significant = case_when( !is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "both"),
#               is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "nucSeq",
#               !is.na(avg_logFC_hypoMap) & is.na(avg_logFC_yeo) ~ "hypoMap"
# )
both$significant = "both"
both$significant[is.na(both$avg_logFC_yeo)] = "hypoMap"
both$significant[is.na(both$avg_logFC_hypoMap)] = "nucSeq"
both$avg_logFC_yeo[is.na(both$avg_logFC_yeo)] = 0
both$avg_logFC_hypoMap[is.na(both$avg_logFC_hypoMap)] = 0
ggplot(both, aes(x=avg_logFC_hypoMap,y=avg_logFC_yeo,color=significant))+geom_point()
gene="Fam150b"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Tgfbi"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Ghsr"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Foxo4"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Ptprk"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Zfhx3"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
gene="Sorcs3"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
p1=VlnPlot(mapped_data_yeo_neurons,features = gene,split.by = "predicted_K169_named")+NoAxes()
p1=VlnPlot(mapped_data_yeo_neurons,features = gene,group.by =  "predicted_K169_named")+NoAxes()
p2=VlnPlot(neuron_map_seurat,features = gene,group.by = "K169_named")+NoAxes()
cowplot::plot_grid(p1,p2,ncol = 1)
gene="Agrp"
p1=VlnPlot(mapped_data_yeo_neurons,features = gene,group.by =  "predicted_K169_named")+NoLegend()
p2=VlnPlot(neuron_map_seurat,features = gene,group.by = "K169_named")+NoLegend()
cowplot::plot_grid(p1,p2,ncol = 1)
?VlnPlot
p1=VlnPlot(mapped_data_yeo_neurons,features = gene,group.by =  "predicted_K169_named",y.max=7)+NoLegend()+theme(axis.text.x = element_blank())
p2=VlnPlot(neuron_map_seurat,features = gene,group.by = "K169_named",y.max=7)+NoLegend()+theme(axis.text.x = element_blank())
cowplot::plot_grid(p1,p2,ncol = 1)
both = agrp_markers_yeo %>% dplyr::select(gene,avg_logFC_yeo = avg_logFC, padj_yeo = p_val_adj) %>% dplyr::filter(padj_yeo<0.01) %>%
dplyr::full_join(agrp_markers_map %>% dplyr::select(gene,avg_logFC_hypoMap = avg_logFC,padj_hypoMap = p_val_adj,specificity),by="gene")# %>%
ggplot(both, aes(x=avg_logFC_hypoMap,y=avg_logFC_yeo,color=significant))+geom_point()
# dplyr::mutate(significant = case_when( !is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "both"),
#               is.na(avg_logFC_hypoMap) & !is.na(avg_logFC_yeo) ~ "nucSeq",
#               !is.na(avg_logFC_hypoMap) & is.na(avg_logFC_yeo) ~ "hypoMap"
# )
both$significant = "both"
ggplot(both, aes(x=avg_logFC_hypoMap,y=avg_logFC_yeo,color=significant))+geom_point()
conditionGenes = FindMarkers(mapped_data_yeo_neurons, ident.1 = "adlib", ident.2 = "fast", group.by = "Diet",
subset.ident = "Slc32a1.Otp.Npy.Agrp.Gm8773",max.cells.per.ident = 5000,min.pct = 0.1,logfc.threshold = 0.1)
View(conditionGenes)
conditionGenes$gene = rownames(conditionGenes)
VlnPlot(mapped_data_yeo_neurons,features = "Pcsk1n",group.by = "Diet",idents = "Slc32a1.Otp.Npy.Agrp.Gm8773")
colnames(conditionGenes)
ggplot(conditionGenes,aes(avg_log2FC,-log10(p_val_adj)))+geom_point()+geom_hline(-log10(0.001))
ggplot(conditionGenes,aes(avg_log2FC,-log10(p_val_adj)))+geom_point()+geom_hline(yintercept = -log10(0.001))
VlnPlot(mapped_data_yeo_neurons,features = "Lepr",group.by = "Diet",idents = "Slc32a1.Otp.Npy.Agrp.Gm8773")
VlnPlot(mapped_data_yeo_neurons,features = "Myrip",group.by = "Diet",idents = "Slc32a1.Otp.Npy.Agrp.Gm8773")
gene="Myrip"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE,split.by = "Diet")+NoAxes()
VlnPlot(mapped_data_yeo_neurons,features = "Pde10a",group.by = "Diet",idents = "Slc32a1.Otp.Npy.Agrp.Gm8773")
FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE,split.by = "Diet")+NoAxes()
VlnPlot(mapped_data_yeo_neurons,features = "Resp18",group.by = "Diet",idents = "Slc32a1.Otp.Npy.Agrp.Gm8773")
FeaturePlot(mapped_data_yeo_neurons,features = "Resp18",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Myrip",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Pde10a",order = TRUE,split.by = "Diet")+NoAxes()
conditionGenes$pct_diff = conditionGenes$pct.1 - conditionGenes$pct.2
FeaturePlot(mapped_data_yeo_neurons,features = "Zbtb16",order = TRUE,split.by = "Diet")+NoAxes()
VlnPlot(mapped_data_yeo_neurons,features = "Zbtb16",group.by = "Diet",idents = "Slc32a1.Otp.Npy.Agrp.Gm8773")
conditionGenes_lef1 = FindMarkers(mapped_data_yeo_neurons, ident.1 = "adlib", ident.2 = "fast", group.by = "Diet",
subset.ident = "Slc32a1.Hmx2.Lef1.Sox14",max.cells.per.ident = 5000,min.pct = 0.1,logfc.threshold = 0.1)
FeaturePlot(mapped_data_yeo_neurons,features = "Fam107b",order = TRUE,split.by = "Diet")+NoAxes()
gene="Fam107b"
p1=FeaturePlot(mapped_data_yeo_neurons,features = gene,order = TRUE)+NoAxes()
p2=FeaturePlot(neuron_map_seurat,features = gene,order = TRUE)+NoAxes()
cowplot::plot_grid(p1,p2)
FeaturePlot(mapped_data_yeo_neurons,features = "Fam107b",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Hdc",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Fos",order = TRUE,split.by = "Diet")+NoAxes()
View(conditionGenes_lef1)
conditionGenes_lef1$gene = rownames(conditionGenes_lef1)
conditionGenes_lef1$pct_diff = conditionGenes_lef1$pct.1 - conditionGenes_lef1$pct.2
View(conditionGenes_lef1)
FeaturePlot(mapped_data_yeo_neurons,features = "Sv2c",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Chchd2",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Ndufa4",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Oxt",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Zbtb16",order = TRUE,split.by = "Diet")+NoAxes()
DimPlot(mapped_data_yeo_neurons,group.by = "K169_named",label = TRUE,label.size = 2.5)+NoAxes()+NoLegend()
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2.5)+NoAxes()+NoLegend()
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2.5,repel = TRUE)+NoAxes()+NoLegend()
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2.5,repel = TRUE,max.overlaps =10)+NoAxes()+NoLegend()
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2.5,repel = TRUE,max.overlaps =100)+NoAxes()+NoLegend()
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2.5,repel = F)+NoAxes()+NoLegend()
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2,repel = F)+NoAxes()+NoLegend()
neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_named ==	"Slc32a1.Hmx2.Ppp1r17.Cck"]
table(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_named ==	"Slc32a1.Hmx2.Ppp1r17.Cck"])
table(neuron_map_seurat@meta.data$Dataset[neuron_map_seurat@meta.data$K169_named ==	"Slc32a1.Hmx2.Ppp1r17.Cck"])
table(neuron_map_seurat@meta.data$K169_pruned[neuron_map_seurat@meta.data$K169_named ==	"Slc32a1.Hmx2.Ppp1r17.Cck"])
cck_markers_map = neuron_map_seurat@misc$markers_comparisons_all[neuron_map_seurat@misc$markers_comparisons_all$p_val_adj<0.01 &
neuron_map_seurat@misc$markers_comparisons_all$cluster_1=="K169-18",]
View(cck_markers_map)
FeaturePlot(mapped_data_yeo_neurons,features = "Zbtb16",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Pcsk1n",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Pcsk1n",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Mff",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Mfn2",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Drp1",order = TRUE,split.by = "Diet")+NoAxes()
FeaturePlot(mapped_data_yeo_neurons,features = "Egr2",order = TRUE,split.by = "Diet")+NoAxes()
install()
library(devtools)
document()
load_all()
check()
document()
install()
system.file("map_scvi.py", package = "mapscvi")
?system.file
system.file("map_scvi", package = "mapscvi")
.libPaths()
library(devtools)
?install
library(mapscvi)
system.file("map_scvi.py", package = "mapscvi")
system.file("map_scvi.py")
?system.file
.libPaths()
system.file("map_scvi.py",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
system.file("map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
?system.file
system.file("python/map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
system.file("inst/python/map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
load_all()
check()
install()
system.file("inst/python/map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
system.file("map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
? system.file
# system(paste0("python3 -u python/map_scvi.py ",updated_name," ",model_path," ",output_file," ",max_epochs))
#system.file("inst/python/map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
system(system.file("./inst/python/map_scvi.py", package = "mypackage"))
# system(paste0("python3 -u python/map_scvi.py ",updated_name," ",model_path," ",output_file," ",max_epochs))
#system.file("inst/python/map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
system.file("./inst/python/map_scvi.py", package = "mapscvi")
# system(paste0("python3 -u python/map_scvi.py ",updated_name," ",model_path," ",output_file," ",max_epochs))
#system.file("inst/python/map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
system.file("./python/map_scvi.py", package = "mapscvi")
# system(paste0("python3 -u python/map_scvi.py ",updated_name," ",model_path," ",output_file," ",max_epochs))
#system.file("inst/python/map_scvi.py",package = "mapscvi",lib.loc = "/beegfs/scratch/bruening_scratch/lsteuernagel/R/user_lib/x86_64-pc-linux-gnu-library/4.0/mapscvi/")
system.file("python/map_scvi.py", package = "mapscvi")
install()
load_all()
library(mapscvi)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/query_romanov_object.RData")
query_romanov
names(query_romanov@reductions)
query_romanov = map_new_seurat_hypoMap(query_romanov,suffix="query_romanov",label_col="K169_named",max_epochs=20,reference_seurat=reference_hypoMap)
head(sort(table(query_romanov@meta.data$predicted),decreasing = TRUE),n = 10)
plot_query_labels(query_seura_object=query_romanov,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/reference_hypoMap.RData")
query_romanov = map_new_seurat_hypoMap(query_romanov,suffix="query_romanov",label_col="K169_named",max_epochs=20,reference_seurat=reference_hypoMap)
names(query_romanov@reductions)
plot_query_labels(query_seura_object=query_romanov,reference_seurat=reference_hypoMap,label_col="K169_named",overlay = FALSE,labelonplot = FALSE)
## load neuron map
map_name = "hypothalamus_neurons_reference"
map_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/"
map_seurat_path = paste0(map_path,map_name,".h5Seurat")
neuron_map_seurat = SeuratDisk::LoadH5Seurat(map_seurat_path)
