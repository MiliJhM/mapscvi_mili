Seurat::FeaturePlot(neuron_map_seurat,features = c("Serpina3n","Trh"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Gsx1","Trh"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Asb4","Trh"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Gpr179","Trh"),order = TRUE)+Seurat::NoAxes()
mapped_data_yeo_neurons= SeuratDisk::LoadH5Seurat("/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/mapped_data_yeo_neurons/mapped_data_yeo_neurons.h5Seurat")
# check results
colnames(mapped_data_yeo_neurons@meta.data)
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2)+NoLegend()+NoAxes()
table(mapped_data_yeo_neurons@meta.data$Diet)
deg_per_cluster = FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",ident.2 = "adlib",group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
Idents(mapped_data_yeo_neurons) <- "Diet"
deg_per_cluster = FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",ident.2 = "adlib",group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
Idents(mapped_data_yeo_neurons)
table(mapped_data_yeo_neurons@meta.data$Diet)
?FindMarkers
deg_per_cluster = FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",ident.2 = "adlib",group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
##########
### check fos1 diff
##########
require(Seurat)
table(mapped_data_yeo_neurons@meta.data$Diet)
Idents(mapped_data_yeo_neurons) <- "Diet"
deg_per_cluster = FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",ident.2 = "adlib",group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
head(x = Idents(object = mapped_data_yeo_neurons))
mapped_data_yeo_neurons$Diet
levels(mapped_data_yeo_neurons$Diet)
mapped_data_yeo_neurons$Diet = as.factor(mapped_data_yeo_neurons$Diet)
Idents(mapped_data_yeo_neurons) <- "Diet"
deg_per_cluster = FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",ident.2 = "adlib",group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
deg_per_cluster = Seurat::FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",ident.2 = "adlib",group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
deg_per_cluster = Seurat::FindMarkers(mapped_data_yeo_neurons,ident.1 = fast,ident.2 = adlib,group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
deg_per_cluster = Seurat::FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",ident.2 = "adlib",group.by = "predicted_K169_named",features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
?FindAllMarkers
source("/beegfs/scratch/bruening_scratch/lsteuernagel/projects/2020-11-jule-single-cell-rnaseq/functions/findDEG.R")
deg_per_cluster = FindAll_DEGs(mapped_data_yeo_neurons,group_var = "Diet",idents_name = "predicted_K169_named",max.cells.per.ident = 1000,features = c("Fos","Egr1","Agrp","Pomc"))
deg_per_cluster = FindAll_DEGs(mapped_data_yeo_neurons,group_var = "Diet",idents_name = "predicted_K169_named",max.cells.per.ident = 1000,features = c("Fos","Egr1","Agrp","Pomc"),logfc.threshold=0,pval_filter=Inf)
View(deg_per_cluster)
?FindMarkers
cells1=mapped_data_yeo_neurons@meta.data$Cell_ID[mapped_data_yeo_neurons@meta.data$Diet=="adlib"  & mapped_data_yeo_neurons$predicted_K169_named=="Slc32a1.Hmx2.Gsx1.Ebf1.Trh"]
cells2=mapped_data_yeo_neurons@meta.data$Cell_ID[mapped_data_yeo_neurons@meta.data$Diet=="fast"  & mapped_data_yeo_neurons$predicted_K169_named=="Slc32a1.Hmx2.Gsx1.Ebf1.Trh"]
deg_per_cluster_one = Seurat::FindMarkers(mapped_data_yeo_neurons,cells.1=cells1,cells.2 = cells2,features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
deg_per_cluster_one = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000)
deg_per_cluster_one = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000,min.pct=0)
deg_per_cluster_one = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000,min.pct=0, logfc.threshold =0)
deg_per_cluster_one = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000,min.pct=-Inf, logfc.threshold =0)
a1= FetchData(mapped_data_yeo_neurons,features = c("Fos","Egr1","Trh"),cells = c(cells1,cells2))
?FetchData
?FetchData
a1= FetchData(mapped_data_yeo_neurons,vars = c("Fos","Egr1","Trh"),cells = c(cells1,cells2))
View(a1)
cells1=mapped_data_yeo_neurons@meta.data$Cell_ID[mapped_data_yeo_neurons@meta.data$Diet=="adlib"  & mapped_data_yeo_neurons$predicted_K169_named=="Slc32a1.Otp.Npy.Agrp"]
table(mapped_data_yeo_neurons$predicted_K169_named)
cells1=mapped_data_yeo_neurons@meta.data$Cell_ID[mapped_data_yeo_neurons@meta.data$Diet=="adlib"  & mapped_data_yeo_neurons$predicted_K169_named=="Slc32a1.Otp.Npy.Agrp.Gm8773"]
cells2=mapped_data_yeo_neurons@meta.data$Cell_ID[mapped_data_yeo_neurons@meta.data$Diet=="fast"  & mapped_data_yeo_neurons$predicted_K169_named=="Slc32a1.Otp.Npy.Agrp.Gm8773"]
degs_Slc32a1.Otp.Npy.Agrp.Gm8773 = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,max.cells.per.ident = 1000,min.pct=-Inf, logfc.threshold =0)
degs_Slc32a1.Otp.Npy.Agrp.Gm8773 = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,max.cells.per.ident = 1000,min.pct=0, logfc.threshold =0)
deg_per_cluster_one = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,features = c("Fos","Egr1","Agrp","Pomc"),max.cells.per.ident = 1000,min.pct=-Inf, logfc.threshold =0)
?FindMarkers
degs_Slc32a1.Otp.Npy.Agrp.Gm8773 = Seurat::FindMarkers(mapped_data_yeo_neurons@assays$RNA@data,cells.1=cells1,cells.2 = cells2,max.cells.per.ident = 1000,min.pct=0, logfc.threshold =0)
degs_Slc32a1.Otp.Npy.Agrp.Gm8773 = Seurat::FindMarkers(mapped_data_yeo_neurons,cells.1=cells1,cells.2 = cells2,max.cells.per.ident = 1000,min.pct=0, logfc.threshold =0)
degs_Slc32a1.Otp.Npy.Agrp.Gm8773 = Seurat::FindMarkers(mapped_data_yeo_neurons,ident.1 = "predicted_K169_named",cells.1=cells1,cells.2 = cells2,max.cells.per.ident = 1000,min.pct=0, logfc.threshold =0)
degs_Slc32a1.Otp.Npy.Agrp.Gm8773 = Seurat::FindMarkers(mapped_data_yeo_neurons,ident.1 = "Slc32a1.Otp.Npy.Agrp.Gm8773",cells.1=cells1,cells.2 = cells2,max.cells.per.ident = 1000,min.pct=0, logfc.threshold =0)
degs_Slc32a1.Otp.Npy.Agrp.Gm8773 = Seurat::FindMarkers(mapped_data_yeo_neurons,ident.1 = "fast",cells.1=cells1,cells.2 = cells2,max.cells.per.ident = 1000,min.pct=0, logfc.threshold =0)
dim(mapped_data_yeo_neurons@assays$RNA@data)
suffix ="mapped_data_yeo_neurons" # a name
query_seurat_object_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapFull_v4/harmonization_results/mapped_data_yeo_full/mapped_data_yeo_full.h5Seurat" # seurat object to load
subset_col = "predicted_Curated_Class" # specifiy metdata column to be usedfor subsetting (e.g. subset to neurons when mapping on neuron ref)
subset_values = "Neurons"
map_name = "hypothalamus_neurons_reference" # reference map
map_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/"
model_path = paste0(map_path,map_name,"_model/")
query_seurat_object = SeuratDisk::LoadH5Seurat(query_seurat_object_path)
## load neuron map
map_name = "hypothalamus_neurons_reference"
map_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/"
map_seurat_path = paste0(map_path,map_name,".h5Seurat")
neuron_map_seurat = SeuratDisk::LoadH5Seurat(map_seurat_path)
?save
#"/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/"
reference_map_reduc = neuron_map_seurat@reductions$scvi
reference_map_umap = neuron_map_seurat@reductions$umap_scvi
reference_map_metadata = neuron_map_seurat@meta.data
save(reference_map_reduc=reference_map_reduc,reference_map_umap=reference_map_umap,reference_map_metadata=reference_map_metadata,
file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/hypoMap_dimred.RData")
rm(reference_map_umap)
rm(reference_map_reduc)
load(dim_red_file)
dim_red_file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/hypoMap_dimred.RData"
message("Loading reference information from ",dim_red_file)
load(dim_red_file)
## load romanov query
suffix ="mapped_data_yeo_romanov" # a name
query_seurat_object_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/mapped_data_Romanov_neurons/mapped_data_Romanov_neurons.h5Seurat" # seurat object to load
## load romanov query
suffix ="mapped_data_yeo_romanov" # a name
query_seurat_object_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/mapped_data_Romanov_neurons/mapped_data_Romanov_neurons.h5Seurat" # seurat object to load
query_seurat_object = SeuratDisk::LoadH5Seurat(query_seurat_object_path)
dim(query_seurat_object)
names(query_seurat_object@reductions)
query_seurat_object@reductions = list()
colnames(query_seurat_object@meta.data)
query_seurat_object@meta.data = query_seurat_object@meta.data[,1:20]
colnames(query_seurat_object@meta.data)
#save
save(reference_map_reduc,reference_map_umap,reference_map_metadata,
file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/hypoMap_dimred.RData")
#save testdata
save(query_seurat_object,
file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/query_test_object.RData")
check()
require(devtools)
check()
check()
document()
load_all()
check()
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/query_test_object.RData")
query_seurat_object
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=10)
reference_map_reduc = neuron_map_seurat@reductions$scvi
reference_map_umap = neuron_map_seurat@reductions$umap_scvi
reference_map_metadata = neuron_map_seurat@meta.data
save(reference_map_reduc,reference_map_umap,reference_map_metadata,
file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/hypoMap_dimred.RData")
rm(reference_map_metadata)
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=10)
rm(reference_map_reduc)
rm(reference_map_umap)
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
load_all()
document()
load_all()
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
load_all()
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
check()
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
load_all()
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
names(query_seurat_object)
names(query_seurat_object@reductions)
table(query_seurat_object@meta.data$predicted)
suffix ="mapped_data_yeo_romanov" # a name
query_seurat_object_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/mapped_data_Romanov_neurons/mapped_data_Romanov_neurons.h5Seurat" # seurat object to load
query_seurat_object = SeuratDisk::LoadH5Seurat(query_seurat_object_path)
colnames(query_seurat_object@meta.data)
DimPlot(query_seurat_object,group.by = "predicted_K169_named")+NoLegend()
colnames(neuron_map_seurat@reductions$scvi)
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
names(query_seurat_object@reductions)
names(query_seurat_object@reductions)
table(query_seurat_object@meta.data$predicted)
load_all()
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
names(query_seurat_object@reductions)
names(query_seurat_object@reductions)
table(query_seurat_object@meta.data$predicted)
DimPlot(query_seurat_object,group.by = "predicted")+NoLegend()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
devtools::build_readme()
suffix ="mapped_data_yeo_romanov" # a name
query_seurat_object_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/mapped_data_Romanov_neurons/mapped_data_Romanov_neurons.h5Seurat" # seurat object to load
query_seurat_object = SeuratDisk::LoadH5Seurat(query_seurat_object_path)
colnames(query_seurat_object@meta.data)
DimPlot(query_seurat_object,group.by = "predicted_K169_named")+NoLegend()
Seurat::DimPlot(query_seurat_object,group.by = "predicted_K169_named")+NoLegend()
Seurat::DimPlot(query_seurat_object,group.by = "predicted_K169_named")+Seurat::NoLegend()
working_scvi = query_seurat_object@reductions$mapped_scvi
# prepare
query_seurat_object = prepare_query_hypoMap(query_seurat_object,suffix="query",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
load_all()
# prepare
query_seurat_object = prepare_query_hypoMap(query_seurat_object,suffix="query",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
# predict with scvi
query_seurat_object = predict_query(query_seurat_object,model_path,max_epochs = max_epochs,assay="RNA",global_seed=global_seed)
# predict with scvi
query_seurat_object = predict_query(query_seurat_object,model_path,max_epochs = 20,assay="RNA",global_seed=global_seed)
## compare:
new_scvi = query_seurat_object@reductions$scvi
cor(new_scvi[,1],working_scvi[,1])
cor(new_scvi@cell.embeddings[,1],working_scvi@cell.embeddings[,1])
cor(new_scvi@cell.embeddings[,2],working_scvi@cell.embeddings[,2])
# prepare
query_seurat_object = prepare_query_hypoMap(query_seurat_object,suffix="query",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
# predict with scvi
query_seurat_object = predict_query(query_seurat_object,model_path,max_epochs = 20,assay="RNA",global_seed=global_seed)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Pmch"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Hcrtr1"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Hcrtr2"),order = TRUE)+Seurat::NoAxes()
maggie_pmch = SeuratDisk::LoadH5Seurat("/beegfs/scratch/bruening_scratch/lsteuernagel/data/maggie_pmch/maggie_pmch.h5Seurat")
source("/beegfs/scratch/bruening_scratch/lsteuernagel/projects/scHarmonize/utils.R")
orexin_expression = Seurat::FetchData(maggie_pmch,vars = c("Hcrtr2","Hcrtr1","Pmch"))
View(orexin_expression)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Pmch","Slc17a6","Slc32a1"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Pmch","Slc17a6","Slc32a1","Slc18a2"),order = TRUE)+Seurat::NoAxes()
gaba_expression = Seurat::FetchData(maggie_pmch,vars = c("Slc32a1","Slc17a6","Pmch"))
View(gaba_expression)
gaba_expression = Seurat::FetchData(maggie_pmch,vars = c("Slc32a1","Gad1","Gad2","Pmch"))
View(gaba_expression)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Slc32a1","Gad1","Gad2","Pmch"),order = TRUE)#+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Pmch","Slc17a6","Slc32a1"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Pmch","Abat"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Pmch","Cartpt","Htr2c"),order = TRUE)+Seurat::NoAxes()
mapped_data_yeo_neurons= SeuratDisk::LoadH5Seurat("/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapNeurons_v4/harmonization_results/hypothalamus_neurons_reference/mapped_data_yeo_neurons/mapped_data_yeo_neurons.h5Seurat")
# check results
colnames(mapped_data_yeo_neurons@meta.data)
DimPlot(mapped_data_yeo_neurons,group.by = "predicted_K169_named",label = TRUE,label.size = 2)+NoLegend()+NoAxes()
?FindMarkers
conditionGenes = Seurat::FindMarkers(mapped_data_yeo_neurons, ident.1 = "Slc32a1.Hmx2.Gsx1.Ebf1.Trh", group.by = "Diet", subset.ident = "predicted_K169_named",min.pct = 0)
colnames(mapped_data_yeo_neurons@meta.data)
##
Idents(mapped_data_yeo_neurons) <- "predicted_K169_named"
conditionGenes = Seurat::FindMarkers(mapped_data_yeo_neurons, ident.1 = "fast",ident.2 = "adlib", group.by = "Diet", subset.ident = "Slc32a1.Hmx2.Gsx1.Ebf1.Trh",min.pct = 0)
View(conditionGenes)
colnames(conditionGenes)
source("/beegfs/scratch/bruening_scratch/lsteuernagel/projects/2020-11-jule-single-cell-rnaseq/functions/findDEG.R")
deg_per_cluster = FindAll_DEGs(mapped_data_yeo_neurons,group_var = "Diet",idents_name = "predicted_K169_named",max.cells.per.ident = 1000,features = c("Fos","Egr1","Agrp","Pomc"),logfc.threshold=0,pval_filter=Inf)
View(conditionGenes)
conditionGenes$gene = rownames(conditionGenes)
View(conditionGenes)
View(deg_per_cluster)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Hk2"),order = TRUE)+Seurat::NoAxes()
conditionGenes = Seurat::FindMarkers(mapped_data_yeo_neurons, ident.1 = "fast",ident.2 = "adlib", group.by = "Diet", subset.ident = "Slc32a1.Hmx2.Lef1.Sox14",min.pct = 0)
conditionGenes$gene = rownames(conditionGenes)
View(conditionGenes)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Gem"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(mapped_data_yeo_neurons,features = c("Gem"),order = TRUE,split.by = "Diet")+Seurat::NoAxes()
Seurat::FeaturePlot(mapped_data_yeo_neurons,features = c("Egr1"),order = TRUE,split.by = "Diet")+Seurat::NoAxes()
Seurat::FeaturePlot(mapped_data_yeo_neurons,features = c("Fos"),order = TRUE,split.by = "Diet")+Seurat::NoAxes()
Seurat::FeaturePlot(mapped_data_yeo_neurons,features = c("Gem"),order = TRUE,split.by = "Diet")+Seurat::NoAxes()
deg_per_cluster = FindAll_DEGs(mapped_data_yeo_neurons,group_var = "Diet",idents_name = "predicted_K169_named",max.cells.per.ident = 1000,
features = c("Fos","Egr1","Agrp","Pomc"),logfc.threshold=0,pval_filter=Inf,min.pct = 0)
View(deg_per_cluster)
## load data
edgelist = neuron_map_seurat@misc$pruned_edgelist
edgelist = edgelist[edgelist$level<=6,1:2]
# anno_df: cluster id, clean_names, clusterlevel, ncells, first_gene
pruned_ids =neuron_map_seurat@meta.data[,c("Cell_ID",colnames(neuron_map_seurat@meta.data)[grepl("_pruned",colnames(neuron_map_seurat@meta.data))])] %>%
tidyr::gather(-Cell_ID,key="colname",value="id") %>% dplyr::mutate(clusterlevel = str_extract(colname,"K[0-9]+")) %>% dplyr::distinct(id,clusterlevel,.keep_all=TRUE)
named_ids =neuron_map_seurat@meta.data[,c("Cell_ID",colnames(neuron_map_seurat@meta.data)[grepl("_named",colnames(neuron_map_seurat@meta.data))])] %>%
tidyr::gather(-Cell_ID,key="colname",value="id") %>% dplyr::mutate(clusterlevel = str_extract(colname,"K[0-9]+"))  %>% dplyr::distinct(id,clusterlevel,.keep_all=TRUE)
both_map = dplyr::left_join(pruned_ids,named_ids,by=c("Cell_ID"="Cell_ID","clusterlevel"="clusterlevel")) %>% dplyr::select(cluster_id = id.x,Map_CellType = id.y)
anno_df = neuron_map_seurat@misc$pruned_edgelist %>% dplyr::select(cluster_id = to, clusterlevel = clusterlevel,ncells ) %>% dplyr::left_join(both_map,by="cluster_id")
anno_df$first_gene = sapply(anno_df$Map_CellType,function(x){strsplit(x,"\\.")[[1]][length(strsplit(x,"\\.")[[1]])]})
View(anno_df)
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_pruned=="K169-48"]
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_pruned=="K169-48"])
unique(neuron_map_seurat@meta.data$other_likely_regions[neuron_map_seurat@meta.data$K169_pruned=="K169-48"])
table(neuron_map_seurat@meta.data$Dataset[neuron_map_seurat@meta.data$K169_pruned=="K169-48"])
Seurat::FeaturePlot(neuron_map_seurat,features = c("Trh"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Nkx2-4"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Glpr"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Glp1r"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Lef1"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Lepr"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(mapped_data_yeo_neurons,features = c("Fos"),order = TRUE,split.by = "Diet")+Seurat::NoAxes()
DimPlot(neuron_map_seurat,group.by = "Dataset")
Seurat::FeaturePlot(neuron_map_seurat,features = c("Lef1"),order = TRUE)+Seurat::NoAxes()
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_pruned=="K169-48"])
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_named=="Slc32a1.Hmx2.Lef1.Sox14-48"])
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_named=="Slc32a1.Hmx2.Lef1.Sox14"])
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_pruned=="K169-48"])
unique(neuron_map_seurat@meta.data$other_likely_regions[neuron_map_seurat@meta.data$K169_pruned=="K169-48"])
table(neuron_map_seurat@meta.data$Dataset[neuron_map_seurat@meta.data$K169_pruned=="K169-48"])
colnames(deg_per_cluster)
write.table(deg_per_cluster %>% dplyr::filter(p_val < 0.01 & abs(pct.1 - pct.2) > 0.05 & avg_log2FC > 0.1),quote = F,sep = ",",row.names = F)
write.table(deg_per_cluster %>% dplyr::filter(gene == "Fos" & p_val < 0.01 & abs(pct.1 - pct.2) > 0.05 & avg_log2FC > 0.1),quote = F,sep = ",",row.names = F)
write.table(deg_per_cluster %>% dplyr::filter(gene == "Fos" & p_val < 0.01 & abs(pct.1 - pct.2) > 0.05 & abs(avg_log2FC) > 0.1),quote = F,sep = ",",row.names = F)
write.table(deg_per_cluster %>% dplyr::filter(gene == "Fos" & p_val < 0.01 & abs(pct.1 - pct.2) > 0.05 & abs(avg_log2FC) > 0.1) %>% arrange(p_val),quote = F,sep = ",",row.names = F)
write.table(deg_per_cluster %>% dplyr::filter(gene == "Fos" & p_val < 0.05 & abs(pct.1 - pct.2) > 0.05 & abs(avg_log2FC) > 0.1) %>% arrange(p_val),quote = F,sep = ",",row.names = F)
0.1^2
2^0.1
log2(4)
log2(2)
log2(2)
log2(1)
log2(1.5)
log2(1.1)
2^0.1
Seurat::FeaturePlot(neuron_map_seurat,features = c("Asb4"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Tbx3"),order = TRUE)+Seurat::NoAxes()
cells1=mapped_data_yeo_neurons@meta.data$Cell_ID[mapped_data_yeo_neurons@meta.data$predicted_K169_named=="Slc32a1.Hmx2.Lef1.Sox14"]
expre_cels1=FetchData(object = mapped_data_yeo_neurons,vars = c("Tbx3","Lef1","Asb4","Sox14"),cells=cells1)
lef1_info = cbind(mapped_data_yeo_neurons@meta.data[,c("Dataset","Cell_ID")],expre_cels1)
colnames(mapped_data_yeo_neurons@meta.data)
cells1=neuron_map_seurat@meta.data$Cell_ID[neuron_map_seurat@meta.data$predicted_K169_named=="Slc32a1.Hmx2.Lef1.Sox14"]
expre_cels1=FetchData(object = neuron_map_seurat,vars = c("Tbx3","Lef1","Asb4","Sox14"),cells=cells1)
lef1_info = cbind(neuron_map_seurat@meta.data[,c("Dataset","Cell_ID")],expre_cels1)
cells1=neuron_map_seurat@meta.data$Cell_ID[neuron_map_seurat@meta.data$K169_named=="Slc32a1.Hmx2.Lef1.Sox14"]
expre_cels1=FetchData(object = neuron_map_seurat,vars = c("Tbx3","Lef1","Asb4","Sox14"),cells=cells1)
lef1_info = cbind(neuron_map_seurat@meta.data[cells1,c("Dataset","Cell_ID")],expre_cels1)
View(expre_cels1)
View(lef1_info)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Sox14"),order = TRUE)+Seurat::NoAxes()
markers_all = neuron_map_seurat@misc$markers_comparisons_all
View(markers_all)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Wif1"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Bsx"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Meox2"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Rspo2"),order = TRUE)+Seurat::NoAxes()
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_named=="Slc32a1.Hmx2.Lef1.Sox14"])
Seurat::FeaturePlot(neuron_map_seurat,features = c("Cmp2"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Bmp2"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Lef1"),order = TRUE)+Seurat::NoAxes()
Seurat::FeaturePlot(neuron_map_seurat,features = c("Gpr50"),order = TRUE)+Seurat::NoAxes()
unique(neuron_map_seurat@meta.data$suggested_region_curated[neuron_map_seurat@meta.data$K169_named=="Slc32a1.Hmx2.Hmx3.Gpr50"])
table(neuron_map_seurat@meta.data$Dataset[neuron_map_seurat@meta.data$K169_named=="Slc32a1.Hmx2.Hmx3.Gpr50"])
Seurat::FeaturePlot(mapped_data_yeo_neurons,features = c("Fos"),order = TRUE,split.by = "Diet")+Seurat::NoAxes()
Seurat::FeaturePlot(mapped_data_yeo_neurons,features = c("Fos"),order = TRUE,split.by = "Diet")#+Seurat::NoAxes()
# predict with scvi
query_seurat_object = predict_query(query_seurat_object,model_path,max_epochs = 20,assay="RNA",global_seed=global_seed)
load_all(
)
# predict with scvi
query_seurat_object = predict_query(query_seurat_object,model_path,max_epochs = 20,assay="RNA",global_seed=global_seed)
# prepare
query_seurat_object_Yeo = prepare_query_hypoMap(mapped_data_yeo_neurons,suffix="query",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
# predict with scvi
query_seurat_object_Yeo = predict_query(query_seurat_object_Yeo,model_path,max_epochs = 20,assay="RNA",global_seed=global_seed)
# prepare
query_seurat_object = prepare_query_hypoMap(query_seurat_object,suffix="query",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
load_all()
# prepare
query_seurat_object = prepare_query_hypoMap(query_seurat_object,suffix="query",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
# predict with scvi
query_seurat_object = predict_query(query_seurat_object,model_path,max_epochs = 20,assay="RNA",global_seed=global_seed)
## compare:
new_scvi = query_seurat_object@reductions$scvi
cor(new_scvi@cell.embeddings[,2],working_scvi@cell.embeddings[,2])
# load reference map data
if(is.null(reference_map_reduc) | is.null(reference_map_umap)){
message("Loading reference information from ",dim_red_file)
load(dim_red_file)
}
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/query_test_object.RData")
query_seurat_object
names(query_seurat_object@reductions)
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20)
names(query_seurat_object@reductions)
names(query_seurat_object@reductions)
table(query_seurat_object@meta.data$predicted)
head(sort(table(query_seurat_object@meta.data$predicted),decreasing = TRUE),n = 20)
Seurat::DimPlot(query_seurat_object,group.by = "predicted")+Seurat::NoLegend()
document()
check()
build_readme()
wholeNodoseSeq_seurat = readRDS("/beegfs/scratch/bruening_scratch/lsteuernagel/data/vagal_sensory_neurons_Diba/wholeNodoseSeq_seurat.rds")
names(wholeNodoseSeq_seurat@reductions)
wholeNodoseSeq_seurat = map_new_seurat_hypoMap(wholeNodoseSeq_seurat,suffix="query_romanov",label_col="K169_named",max_epochs=20)
wholeNodoseSeq_seurat
wholeNodoseSeq_seurat = map_new_seurat_hypoMap(wholeNodoseSeq_seurat,suffix="query_nodose",label_col="K169_named",max_epochs=30)
colnames(wholeNodoseSeq_seurat@meta.data)
names(wholeNodoseSeq_seurat@reductions)
document()
load_all()
wholeNodoseSeq_seurat = prepare_query_hypoMap(wholeNodoseSeq_seurat ,suffix="query_nodose",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
subset_col
query_seurat_object= wholeNodoseSeq_seurat
# subset if wanted
if(subset_col %in% colnames(query_seurat_object@meta.data) & !is.null(subset_values)){
bef = ncol(query_seurat_object)
query_seurat_object = subset(query_seurat_object,subset = !!rlang::sym(subset_col) %in% subset_values)
message("Subsetting query object to ",ncol(query_seurat_object)," cells from ",bef," cells" )
}
#normalize
if(dim(query_seurat_object@assays$RNA@data)[2] != dim(query_seurat_object@assays$RNA@counts)[2]){normalize=TRUE}
if(normalize){
message("Normalizing data")
query_seurat_object <- Seurat::NormalizeData(object = query_seurat_object,assay = assay, verbose = F,normalization.method = "LogNormalize",scale.factor = 10000)
}
assay="RNA"
#normalize
if(dim(query_seurat_object@assays$RNA@data)[2] != dim(query_seurat_object@assays$RNA@counts)[2]){normalize=TRUE}
if(normalize){
message("Normalizing data")
query_seurat_object <- Seurat::NormalizeData(object = query_seurat_object,assay = assay, verbose = F,normalization.method = "LogNormalize",scale.factor = 10000)
}
dim(query_seurat_object)
dim(query_seurat_object@assays$RNA@counts)
dim(query_seurat_object@assays$RNA@data)
sum(query_seurat_object@assays$RNA@data)[1]
sum(query_seurat_object@assays$RNA@data)[,1]
sum(query_seurat_object@assays$RNA@data[,1])
sum(query_seurat_object@assays$RNA@data[1,])
load_all()
wholeNodoseSeq_seurat = prepare_query_hypoMap(wholeNodoseSeq_seurat ,suffix="query_nodose",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
load_all()
wholeNodoseSeq_seurat = prepare_query_hypoMap(wholeNodoseSeq_seurat ,suffix="query_nodose",assay="RNA",subset_col=subset_col,subset_values=subset_values,normalize=TRUE,
covariates=c(batch_var = "Batch_ID",inferred_sex = "inferred_sex.x",rpl_signature_expr_median = "rpl_signature_expr_median"),global_seed=global_seed)
wholeNodoseSeq_seurat = readRDS("/beegfs/scratch/bruening_scratch/lsteuernagel/data/vagal_sensory_neurons_Diba/target_sc_seq_seurat.rds")
wholeNodoseSeq_seurat = readRDS("/beegfs/scratch/bruening_scratch/lsteuernagel/data/hippocampus/bakulski/hippocampus_bakulski_seurat_310720.rds")
rm(wholeNodoseSeq_seurat)
rm(wholeNodoseSeq_seurat)
hippocampus_bakulski = readRDS("/beegfs/scratch/bruening_scratch/lsteuernagel/data/hippocampus/bakulski/hippocampus_bakulski_seurat_310720.rds")
names(hippocampus_bakulski@reductions)
wholeNodoseSeq_seurat = map_new_seurat_hypoMap(hippocampus_bakulski,suffix="query_nodose",label_col="K169_named",max_epochs=30)
load_all()
wholeNodoseSeq_seurat = map_new_seurat_hypoMap(hippocampus_bakulski,suffix="query_nodose",label_col="K169_named",max_epochs=30)
sum(hippocampus_bakulski@assays$RNA@counts[,1])%%1
load_all()
hippocampus_bakulski = map_new_seurat_hypoMap(hippocampus_bakulski,suffix="query_nodose",label_col="K169_named",max_epochs=30)
head(sort(table(query_seurat_object@meta.data$predicted),decreasing = TRUE),n = 20)
head(sort(table(hippocampus_bakulski@meta.data$predicted),decreasing = TRUE),n = 20)
Seurat::DimPlot(hippocampus_bakulski,group.by = "predicted")+Seurat::NoLegend()
## load full map
project_name = "hypothalamus_full_map"
project_path = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/scHarmonize/hypothalamusMapFull_v4/harmonization_results/"
seurat_file_name = paste0(project_path,project_name,".h5Seurat")
message(Sys.time(),": Load seurat object.." )
full_map_seurat = SeuratDisk::LoadH5Seurat(seurat_file_name)
Seurat::FeaturePlot(neuron_map_seurat,features = c("Lef1","Sox14"),order = TRUE)+Seurat::NoAxes()
names(full_map_seurat@reductions)
colnames(full_map_seurat@meta.data)
# LGR6
# FZD5
# LPAR3
# GPR50
# GRPR
p <- Seurat::FeaturePlot(full_map_seurat,features = c("Lgr6","Fzd5","Lpar3","Gpr50","Grpr"), combine = FALSE)
# LGR6
# FZD5
# LPAR3
# GPR50
# GRPR
p <- Seurat::FeaturePlot(full_map_seurat,features = c("Lgr6","Fzd5","Lpar3","Gpr50","Grpr"), combine = FALSE,raster = F)
for(i in 1:length(p)) {
p[[i+1]] <- p[[i]] + Seurat::NoLegend() + Seurat::NoAxes()
}
p[[1]] <- Seurat::DimPlot(full_map_seurat,group.by = "Curated_Class")+ Seurat::NoLegend() + Seurat::NoAxes()
p[[1]] <- Seurat::DimPlot(full_map_seurat,group.by = "Curated_Class",raster = F,label = 4)+ Seurat::NoLegend() + Seurat::NoAxes()
cowplot::plot_grid(plotlist = p)
# LGR6
# FZD5
# LPAR3
# GPR50
# GRPR
p <- Seurat::FeaturePlot(full_map_seurat,features = c("Lgr6","Fzd5","Lpar3","Gpr50","Grpr"), combine = FALSE,order = TRUE,raster = F)
for(i in 1:length(p)) {
p[[i+1]] <- p[[i]] + Seurat::NoLegend() + Seurat::NoAxes()
}
p[[1]] <- Seurat::DimPlot(full_map_seurat,group.by = "Curated_Class",raster = F,label = 4)+ Seurat::NoLegend() + Seurat::NoAxes()
cowplot::plot_grid(plotlist = p)
# GRPR
p <- Seurat::FeaturePlot(full_map_seurat,features = c("Lgr6","Fzd5","Lpar3","Gpr50","Grpr"), combine = FALSE,order = TRUE,raster = F)
for(i in 1:length(p)) {
p[[i]] <- p[[i]] + Seurat::NoLegend() + Seurat::NoAxes()
}
p[[i+1]] <- Seurat::DimPlot(full_map_seurat,group.by = "Curated_Class",raster = F,label = 4)+ Seurat::NoLegend() + Seurat::NoAxes()
cowplot::plot_grid(plotlist = p)
32+37
a1=hippocampus_bakulski@neighbors$query_ref_nn
bak_dists = a1@nn.dist
View(bak_dists)
yeo_dists = mapped_data_yeo_neurons@neighbors$query_ref_nn@nn.dist
View(yeo_dists)
hist(rowMeans(bak_dists))
hist(rowMeans(yeo_dists))
?DimPlot
reference_map_seurat = CreateSeuratObject(neuron_map_seurat@assays$RNA@counts,project = "HypoMap_reference",meta.data = neuron_map_seurat@meta.data)
reference_map_seurat@reductions = neuron_map_seurat@reductions
dummy=matrix(data = as.numeric())
reference_map_seurat@assays$RNA@counts <- dummy[,-1] # error is okay
reference_map_seurat@assays$RNA@data <- dummy[,-1] # error is okay
reference_map_seurat@assays$RNA@scale.data <- dummy[,-1] # error is okay
a1=reference_map_seurat@reductions$scvi
a2=reference_map_seurat@meta.data
object.size(a1)
object.size(a2) / 1000000
object.size(a1) / 1000000
a2=reference_map_seurat@assays$RNA@meta.features
object.size(a2) / 1000000
reference_map_seurat@assays$RNA@meta.features <- dummy[,-1]
reference_map_seurat@assays$RNA@meta.features <- as.data.frame(dummy[,-1])
?load
reference_hypoMap = CreateSeuratObject(neuron_map_seurat@assays$RNA@counts,project = "HypoMap_reference",meta.data = neuron_map_seurat@meta.data)
reference_hypoMap@reductions = neuron_map_seurat@reductions
dummy=matrix(data = as.numeric())
reference_hypoMap@assays$RNA@counts <- dummy[,-1] # error is okay
reference_hypoMap@assays$RNA@data <- dummy[,-1] # error is okay
reference_hypoMap@assays$RNA@scale.data <- dummy[,-1] # error is okay
reference_hypoMap@assays$RNA@meta.features <- as.data.frame(dummy[,-1])
save(reference_map_reduc,reference_map_umap,reference_map_metadata,
file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/reference_hypoMap.RData")
save(reference_hypoMap,file = "/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/reference_hypoMap.RData")
rm(reference_hypoMap)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/reference_hypoMap.RData")
names(query_seurat_object@reductions)
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/query_test_object.RData")
query_seurat_object
load("/beegfs/scratch/bruening_scratch/lsteuernagel/data/tmp_mapscvi/reference_hypoMap.RData")
load_all()
query_seurat_object = map_new_seurat_hypoMap(query_seurat_object,suffix="query_romanov",label_col="K169_named",max_epochs=20,reference_seurat=reference_hypoMap)
names(query_seurat_object@reductions)
head(sort(table(query_seurat_object@meta.data$predicted),decreasing = TRUE),n = 20)
Seurat::DimPlot(query_seurat_object,group.by = "predicted")+Seurat::NoLegend()
check(9
check()
build_readme()
wunderlich_processed_QC = readRDS("/beegfs/scratch/bruening_scratch/lsteuernagel/data/wunderlich_scSeq/IntestineWunderlich_seurat_annotated_160920.RDS)
wunderlich_processed_QC = readRDS("/beegfs/scratch/bruening_scratch/lsteuernagel/data/wunderlich_scSeq/IntestineWunderlich_seurat_annotated_160920.RDS")
document()
